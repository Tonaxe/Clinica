{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/api.service\";\nimport * as i3 from \"@angular/router\";\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    fb;\n    apiService;\n    router;\n    route;\n    resetPassword;\n    email = null;\n    constructor(fb, apiService, router, route) {\n      this.fb = fb;\n      this.apiService = apiService;\n      this.router = router;\n      this.route = route;\n      this.resetPassword = this.fb.group({\n        password: ['', Validators.required],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validator: this.passwordMatchValidator\n      });\n    }\n    ngOnInit() {\n      const navigation = this.router.getCurrentNavigation();\n      const state = navigation?.extras.state;\n      if (state?.email) {\n        this.email = state.email;\n      }\n    }\n    passwordMatchValidator(form) {\n      return form.get('password')?.value === form.get('confirmPassword')?.value ? null : {\n        mismatch: true\n      };\n    }\n    onSubmit() {\n      if (this.resetPassword.valid && this.email) {\n        const form = {\n          email: this.email,\n          password: this.resetPassword.value.password\n        };\n        this.apiService.changePassword(form).subscribe(res => {\n          this.router.navigate([\"/login\"]);\n        }, error => {\n          console.error(\"Error al restablecer la contraseña:\", error);\n        });\n      } else {\n        console.log('Formulario de restablecimiento inválido o falta el email');\n      }\n    }\n    static ɵfac = function ResetPasswordComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetPasswordComponent,\n      selectors: [[\"app-reset-password\"]],\n      standalone: false,\n      decls: 10,\n      vars: 2,\n      consts: [[1, \"container\"], [1, \"resetPassword-box\"], [\"src\", \"assets/logo2.png\", \"alt\", \"Logo\", 1, \"logo\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"password\", \"placeholder\", \"Correo electronico\", \"formControlName\", \"password\"], [\"type\", \"password\", \"placeholder\", \"Contrase\\u00F1a\", \"formControlName\", \"confirmPassword\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function ResetPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"img\", 2);\n          i0.ɵɵelementStart(3, \"h2\");\n          i0.ɵɵtext(4, \"REESTABLECER CONTRASE\\u00D1A\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelement(6, \"input\", 4)(7, \"input\", 5);\n          i0.ɵɵelementStart(8, \"button\", 6);\n          i0.ɵɵtext(9, \"REESTABLECER CONTRASE\\u00D1A\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.resetPassword);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.resetPassword.valid);\n        }\n      },\n      styles: [\"[_nghost-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    background: url('/assets/fondo.png') no-repeat center center/cover;\\n    width: 100%;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    width: 100%;\\n}\\n\\n.resetPassword-box[_ngcontent-%COMP%] {\\n    margin-top: 7%;\\n    background: #b3b3b4;\\n    padding: 20px;\\n    border-radius: 20px;\\n    box-shadow: 0 0 5px rgb(24, 24, 24);\\n    text-align: center;\\n    width: 400px;\\n    border: 4px solid #ececec;;\\n}\\n\\n.logo[_ngcontent-%COMP%] {\\n    width: 200px;\\n    height: 200px;\\n    margin-top: -160px;\\n    margin-left: -40px;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n    color: #1f1f1f;\\n    font-family: Poppins, sans-serif;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n    width: 80%;\\n    padding: 10px;\\n    margin: 10px 0;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    width: 70%;\\n    padding: 10px;\\n    background: #887992;\\n    color: rgb(70, 70, 70);\\n    border-radius: 5px;\\n    cursor: pointer;\\n    font-family: Poppins, sans-serif;\\n    font-size: 16px;\\n    font-weight: bold;\\n    transition: background 0.3s ease;\\n    margin-top: 10px;\\n    box-shadow: #707070 0px 0px 2px;\\n    \\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled {\\n    background: #71657a;\\n    cursor: not-allowed;\\n    color: whitesmoke;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixrRUFBa0U7SUFDbEUsV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixtQ0FBbUM7SUFDbkMsa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsY0FBYztJQUNkLGdDQUFnQztBQUNwQzs7QUFFQTtJQUNJLFVBQVU7SUFDVixhQUFhO0lBQ2IsY0FBYztJQUNkLHNCQUFzQjtJQUN0QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixnQ0FBZ0M7SUFDaEMsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixnQ0FBZ0M7SUFDaEMsZ0JBQWdCO0lBQ2hCLCtCQUErQjs7QUFFbkM7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGlCQUFpQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBoZWlnaHQ6IDEwMHZoO1xyXG4gICAgYmFja2dyb3VuZDogdXJsKCcvYXNzZXRzL2ZvbmRvLnBuZycpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyL2NvdmVyO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnJlc2V0UGFzc3dvcmQtYm94IHtcclxuICAgIG1hcmdpbi10b3A6IDclO1xyXG4gICAgYmFja2dyb3VuZDogI2IzYjNiNDtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDVweCByZ2IoMjQsIDI0LCAyNCk7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBib3JkZXI6IDRweCBzb2xpZCAjZWNlY2VjOztcclxufVxyXG5cclxuLmxvZ28ge1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgaGVpZ2h0OiAyMDBweDtcclxuICAgIG1hcmdpbi10b3A6IC0xNjBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAtNDBweDtcclxufVxyXG5cclxuaDIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIGNvbG9yOiAjMWYxZjFmO1xyXG4gICAgZm9udC1mYW1pbHk6IFBvcHBpbnMsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4IDA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjODg3OTkyO1xyXG4gICAgY29sb3I6IHJnYig3MCwgNzAsIDcwKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtZmFtaWx5OiBQb3BwaW5zLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3MgZWFzZTtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAjNzA3MDcwIDBweCAwcHggMnB4O1xyXG4gICAgXHJcbn1cclxuXHJcbmJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjNzE2NTdhO1xyXG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n  return ResetPasswordComponent;\n})();","map":{"version":3,"names":["Validators","ResetPasswordComponent","fb","apiService","router","route","resetPassword","email","constructor","group","password","required","confirmPassword","validator","passwordMatchValidator","ngOnInit","navigation","getCurrentNavigation","state","extras","form","get","value","mismatch","onSubmit","valid","changePassword","subscribe","res","navigate","error","console","log","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","i3","Router","ActivatedRoute","selectors","standalone","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ResetPasswordComponent_Template_form_ngSubmit_5_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\yassi\\Desktop\\DavxeShop\\DavxeShopSPA\\src\\app\\login\\reset-password\\reset-password.component.ts","C:\\Users\\yassi\\Desktop\\DavxeShop\\DavxeShopSPA\\src\\app\\login\\reset-password\\reset-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../../services/api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ResetPasswordComponentRequest } from '../../models/resetPasswordRequest.model';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  standalone: false,\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrl: './reset-password.component.css'\r\n})\r\nexport class ResetPasswordComponent implements OnInit  {\r\n  resetPassword: FormGroup;\r\n  email: string | null = null;\r\n\r\n  constructor(private fb: FormBuilder, private apiService: ApiService, private router: Router, private route: ActivatedRoute) {\r\n    this.resetPassword = this.fb.group({\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required]\r\n    }, { validator: this.passwordMatchValidator });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    const state = navigation?.extras.state as { email?: string };\r\n    \r\n    if (state?.email) {\r\n      this.email = state.email;\r\n    }\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    return form.get('password')?.value === form.get('confirmPassword')?.value\r\n      ? null : { mismatch: true };\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.resetPassword.valid && this.email) {\r\n      const form: ResetPasswordComponentRequest = {\r\n        email: this.email,\r\n        password: this.resetPassword.value.password\r\n      };\r\n\r\n      this.apiService.changePassword(form).subscribe(\r\n        (res) => {\r\n          this.router.navigate([\"/login\"]);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error al restablecer la contraseña:\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.log('Formulario de restablecimiento inválido o falta el email');\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n    <div class=\"resetPassword-box\">\r\n      <img src=\"assets/logo2.png\" alt=\"Logo\" class=\"logo\">\r\n      <h2>REESTABLECER CONTRASEÑA</h2>\r\n  \r\n      <form [formGroup]=\"resetPassword\" (ngSubmit)=\"onSubmit()\">\r\n        <input type=\"password\" placeholder=\"Correo electronico\" formControlName=\"password\">\r\n        <input type=\"password\" placeholder=\"Contraseña\" formControlName=\"confirmPassword\">\r\n\r\n        <button type=\"submit\" [disabled]=\"!resetPassword.valid\">REESTABLECER CONTRASEÑA</button>\r\n      </form>\r\n    </div>\r\n  </div>  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}